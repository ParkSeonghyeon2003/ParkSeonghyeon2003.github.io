<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="kr"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://parkseonghyeon2003.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://parkseonghyeon2003.github.io/" rel="alternate" type="text/html" hreflang="kr"/><updated>2024-10-09T14:46:12+00:00</updated><id>https://parkseonghyeon2003.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">프로그래머스 Lv. 0 ‘소인수분해’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers12/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘소인수분해’"/><published>2024-10-08T00:00:00+00:00</published><updated>2024-10-08T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers12</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers12/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p> 소인수분해란 어떤 수를 소수들의 곱으로 표현하는 것입니다. 예를 들어 12를 소인수 분해하면 2 * 2 * 3 으로 나타낼 수 있습니다. 따라서 12의 소인수는 2와 3입니다. 자연수 <code class="language-plaintext highlighter-rouge">n</code>이 매개변수로 주어질 때 <code class="language-plaintext highlighter-rouge">n</code>의 소인수를 오름차순으로 담은 배열을 return하도록 solution 함수를 완성해주세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>2 ≤ <code class="language-plaintext highlighter-rouge">n</code> ≤ 10,000<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;set&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">bool</span> <span class="nf">isPrimeNumber</span><span class="p">(</span><span class="k">const</span> <span class="n">set</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">primeDivisor</span><span class="p">,</span> <span class="k">const</span> <span class="kt">int</span><span class="o">&amp;</span> <span class="n">number</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="k">auto</span><span class="o">&amp;</span> <span class="n">it</span> <span class="o">:</span> <span class="n">primeDivisor</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">number</span> <span class="o">%</span> <span class="n">it</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    <span class="n">set</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">primeDivisor</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">isPrimeNumber</span><span class="p">(</span><span class="n">primeDivisor</span><span class="p">,</span> <span class="n">i</span><span class="p">))</span> <span class="p">{</span>
            <span class="n">primeDivisor</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">answer</span><span class="p">.</span><span class="n">assign</span><span class="p">(</span><span class="n">primeDivisor</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">primeDivisor</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p> <code class="language-plaintext highlighter-rouge">isPrimeNumber()</code>라는 함수를 만들어 이미 구한 소인수의 집합(<code class="language-plaintext highlighter-rouge">set</code>)과 소인수인지 판별할 정수를 매개변수로 받아 <code class="language-plaintext highlighter-rouge">set</code>을 iterator로 순회하며 정수를 iterator 개체의 값으로 나머지 연산하여, 나머지가 0인 순간에 바로 <code class="language-plaintext highlighter-rouge">false</code>를 반환한다.<br/>  for문으로 <code class="language-plaintext highlighter-rouge">n</code>까지의 모든 자연수중에 약수를 <code class="language-plaintext highlighter-rouge">isPrimeNumber()</code>함수의 인자로 넘겨주어 소인수의 집합을 <code class="language-plaintext highlighter-rouge">set</code>변수에 담는다. 이를 <code class="language-plaintext highlighter-rouge">vector</code>의 <code class="language-plaintext highlighter-rouge">assign()</code>함수를 통해 벡터로 변환하여 정답을 구하였다.</p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><category term="2주차"/><summary type="html"><![CDATA[set으로 소인수분해하기]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘모스부호 (1)’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers10/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘모스부호 (1)’"/><published>2024-10-05T00:00:00+00:00</published><updated>2024-10-05T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers10</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers10/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p> 머쓱이는 친구에게 모스부호를 이용한 편지를 받았습니다. 그냥은 읽을 수 없어 이를 해독하는 프로그램을 만들려고 합니다. 문자열 <code class="language-plaintext highlighter-rouge">letter</code>가 매개변수로 주어질 때, <code class="language-plaintext highlighter-rouge">letter</code>를 영어 소문자로 바꾼 문자열을 return 하도록 solution 함수를 완성해보세요. 모스부호는 다음과 같습니다.<br/></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>morse = { 
    '.-':'a','-...':'b','-.-.':'c','-..':'d','.':'e','..-.':'f',
    '--.':'g','....':'h','..':'i','.---':'j','-.-':'k','.-..':'l',
    '--':'m','-.':'n','---':'o','.--.':'p','--.-':'q','.-.':'r',
    '...':'s','-':'t','..-':'u','...-':'v','.--':'w','-..-':'x',
    '-.--':'y','--..':'z'
}
</code></pre></div></div> <p><br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>1 ≤ <code class="language-plaintext highlighter-rouge">letter</code>의 길이 ≤ 1,000</li> <li>return값은 소문자입니다.</li> <li><code class="language-plaintext highlighter-rouge">letter</code>의 모스부호는 공백으로 나누어져 있습니다.</li> <li><code class="language-plaintext highlighter-rouge">letter</code>에 공백은 연속으로 두 개 이상 존재하지 않습니다.</li> <li>해독할 수 없는 편지는 주어지지 않습니다.</li> <li>편지의 시작과 끝에는 공백이 없습니다.<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">letter</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">strLen</span> <span class="o">=</span> <span class="n">letter</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">morse</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
        <span class="s">".-"</span><span class="p">,</span><span class="s">"-..."</span><span class="p">,</span><span class="s">"-.-."</span><span class="p">,</span><span class="s">"-.."</span><span class="p">,</span>
        <span class="s">"."</span><span class="p">,</span><span class="s">"..-."</span><span class="p">,</span><span class="s">"--."</span><span class="p">,</span><span class="s">"...."</span><span class="p">,</span>
        <span class="s">".."</span><span class="p">,</span><span class="s">".---"</span><span class="p">,</span><span class="s">"-.-"</span><span class="p">,</span><span class="s">".-.."</span><span class="p">,</span>
        <span class="s">"--"</span><span class="p">,</span><span class="s">"-."</span><span class="p">,</span><span class="s">"---"</span><span class="p">,</span><span class="s">".--."</span><span class="p">,</span>
        <span class="s">"--.-"</span><span class="p">,</span><span class="s">".-."</span><span class="p">,</span><span class="s">"..."</span><span class="p">,</span><span class="s">"-"</span><span class="p">,</span>
        <span class="s">"..-"</span><span class="p">,</span><span class="s">"...-"</span><span class="p">,</span><span class="s">".--"</span><span class="p">,</span><span class="s">"-..-"</span><span class="p">,</span>
        <span class="s">"-.--"</span><span class="p">,</span><span class="s">"--.."</span>
    <span class="p">};</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">idx</span> <span class="o">&lt;</span> <span class="n">strLen</span><span class="p">;</span> <span class="n">idx</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">idx</span> <span class="o">==</span> <span class="n">strLen</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="n">temp</span> <span class="o">+=</span> <span class="n">letter</span><span class="p">[</span><span class="n">idx</span><span class="p">];</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">letter</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">==</span> <span class="sc">' '</span> <span class="o">||</span> <span class="n">idx</span> <span class="o">==</span> <span class="n">strLen</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">26</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">morse</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">temp</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="n">i</span> <span class="o">+</span> <span class="sc">'a'</span><span class="p">;</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">temp</span> <span class="o">+=</span> <span class="n">letter</span><span class="p">[</span><span class="n">idx</span><span class="p">];</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p> <code class="language-plaintext highlighter-rouge">string</code>형 변수 <code class="language-plaintext highlighter-rouge">temp</code>를 선언해, 공백을 만나지 않았다면, <code class="language-plaintext highlighter-rouge">temp</code>에 모스부호 문자를 추가한다.<br/>  공백을 만나게 되거나, 마지막 모스부호 문자를 만나게 되면, <code class="language-plaintext highlighter-rouge">temp</code>가 모스부호 사전에서 몇 번째 인덱스의 문자열과 같은지를 검사하여, 해당 인덱스값과 <code class="language-plaintext highlighter-rouge">'a'</code>를 더하여 <code class="language-plaintext highlighter-rouge">answer</code>에 더하면, 모스부호가 해독된 문자열이 완성된다.<br/>  뭔가 더 깔끔하게 코딩할 수 있을 것 같다…</p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><category term="2주차"/><summary type="html"><![CDATA[모스부호 해독하기]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘구슬을 나누는 경우의 수’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers11/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘구슬을 나누는 경우의 수’"/><published>2024-10-05T00:00:00+00:00</published><updated>2024-10-05T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers11</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers11/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p> 머쓱이는 구슬을 친구들에게 나누어주려고 합니다. 구슬은 모두 다르게 생겼습니다. 머쓱이가 갖고 있는 구슬의 개수 <code class="language-plaintext highlighter-rouge">balls</code>와 친구들에게 나누어 줄 구슬 개수 <code class="language-plaintext highlighter-rouge">share</code>이 매개변수로 주어질 때, <code class="language-plaintext highlighter-rouge">balls</code>개의 구슬 중 <code class="language-plaintext highlighter-rouge">share</code>개의 구슬을 고르는 가능한 모든 경우의 수를 return 하는 solution 함수를 완성해주세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>1 ≤ <code class="language-plaintext highlighter-rouge">balls</code> ≤ 30</li> <li>1 ≤ <code class="language-plaintext highlighter-rouge">share</code> ≤ 30</li> <li>구슬을 고르는 순서는 고려하지 않습니다.</li> <li><code class="language-plaintext highlighter-rouge">share</code> ≤ <code class="language-plaintext highlighter-rouge">balls</code><br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">long</span> <span class="kt">long</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">balls</span><span class="p">,</span> <span class="kt">int</span> <span class="n">share</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">double</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">balls</span><span class="o">-</span><span class="n">share</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">balls</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">answer</span> <span class="o">*=</span> <span class="n">i</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">share</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">answer</span> <span class="o">/=</span> <span class="n">i</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p> 수학의 조합 개념을 도입하면 쉽게 해결 가능하다. n개 중 r개를 뽑는 경우의 수는 <code class="language-plaintext highlighter-rouge">n!/((n-r)!m!)</code>이다. 보통 계산할 때, 약분을 통해 <code class="language-plaintext highlighter-rouge">((n-r)*...*n) / (1*...*r)</code>으로 계산한다. 이를 for문으로 구현하면 위처럼 구현하게 된다.</p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><category term="2주차"/><summary type="html"><![CDATA[수학의 조합 개념을 이용한 풀이]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘배열 자르기’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers7/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘배열 자르기’"/><published>2024-10-04T00:00:00+00:00</published><updated>2024-10-04T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers7</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers7/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p> 정수 배열 <code class="language-plaintext highlighter-rouge">numbers</code>와 정수 <code class="language-plaintext highlighter-rouge">num1</code>, <code class="language-plaintext highlighter-rouge">num2</code>가 매개변수로 주어질 때, <code class="language-plaintext highlighter-rouge">numbers</code>의 <code class="language-plaintext highlighter-rouge">num1</code>번 째 인덱스부터 <code class="language-plaintext highlighter-rouge">num2</code>번째 인덱스까지 자른 정수 배열을 return 하도록 solution 함수를 완성해보세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>2 ≤ <code class="language-plaintext highlighter-rouge">numbers</code>의 길이 ≤ 30</li> <li>0 ≤ <code class="language-plaintext highlighter-rouge">numbers</code>의 원소 ≤ 1,000</li> <li>0 ≤ <code class="language-plaintext highlighter-rouge">num1</code> &lt; <code class="language-plaintext highlighter-rouge">num2</code> &lt; <code class="language-plaintext highlighter-rouge">numbers</code>의 길이<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">numbers</span><span class="p">,</span> <span class="kt">int</span> <span class="n">num1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">num2</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">(</span><span class="n">numbers</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span> <span class="o">+</span> <span class="n">num1</span><span class="p">,</span> <span class="n">numbers</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span> <span class="o">+</span> <span class="n">num2</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
	<span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p> 이 문제를 처음 해결했을 때, for문으로 <code class="language-plaintext highlighter-rouge">numbers</code>의 <code class="language-plaintext highlighter-rouge">num1</code>부터 <code class="language-plaintext highlighter-rouge">num2</code>번 째 인덱스의 값을 순회하며, 새로운 <code class="language-plaintext highlighter-rouge">vector</code>에 <code class="language-plaintext highlighter-rouge">push_back</code>으로 추가해줬었다.<br/>  그러나 더욱 간단한 방법이 있는데, 위 소스 코드처럼 <code class="language-plaintext highlighter-rouge">vector</code>의 생성자로 벡터를 생성할 때 <code class="language-plaintext highlighter-rouge">numbers</code>를 잘라서 복사할 수 있다. 생성자의 첫 번째 인자로 복사 시작 원소를 가르키는 iterator 개체를, 두 번째 인자로 복사 마지막 원소의 다음 원소를 가르키는 iterator 개체를 넘겨주면 된다!</p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><category term="2주차"/><summary type="html"><![CDATA[vector의 일부/전체를 다른 vector로 복사하기]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘외계행성의 나이’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers8/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘외계행성의 나이’"/><published>2024-10-04T00:00:00+00:00</published><updated>2024-10-04T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers8</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers8/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p> 우주여행을 하던 머쓱이는 엔진 고장으로 PROGRAMMERS-962 행성에 불시착하게 됐습니다. 입국심사에서 나이를 말해야 하는데, PROGRAMMERS-962 행성에서는 나이를 알파벳으로 말하고 있습니다. a는 0, b는 1, c는 2, …, j는 9입니다. 예를 들어 23살은 cd, 51살은 fb로 표현합니다. 나이 <code class="language-plaintext highlighter-rouge">age</code>가 매개변수로 주어질 때 PROGRAMMER-962식 나이를 return하도록 solution 함수를 완성해주세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li><code class="language-plaintext highlighter-rouge">age</code>는 자연수입니다.</li> <li><code class="language-plaintext highlighter-rouge">age</code> ≤ 1,000</li> <li>PROGRAMMERS-962 행성은 알파벳 소문자만 사용합니다.<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">age</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">to_string</span><span class="p">(</span><span class="n">age</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="k">auto</span><span class="o">&amp;</span> <span class="n">chr</span> <span class="o">:</span> <span class="n">answer</span><span class="p">)</span> <span class="n">chr</span> <span class="o">+=</span> <span class="sc">'a'</span> <span class="o">-</span> <span class="sc">'0'</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p> <code class="language-plaintext highlighter-rouge">to_string()</code>함수는 string 라이브러리 함수로, 인자로 받은 수를 <code class="language-plaintext highlighter-rouge">string</code> 문자열로 반환한다.<br/>  또한, 한 자리 수의 <code class="language-plaintext highlighter-rouge">int</code> 변수는 <code class="language-plaintext highlighter-rouge">'0'</code>을 빼고, <code class="language-plaintext highlighter-rouge">'a'</code>를 더한 다음 <code class="language-plaintext highlighter-rouge">char</code>형 변수에 배정하는 과정에서, <code class="language-plaintext highlighter-rouge">char</code>형으로 암묵적으로 캐스팅되므로, 어떤 라이브러리 함수 없이도 정수를 문자로 변환할 수 있다.</p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><category term="2주차"/><summary type="html"><![CDATA[int를 string으로 변환하는 to_string() 함수와 char 변수의 정수 연산]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘진료 순서 정하기’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers9/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘진료 순서 정하기’"/><published>2024-10-04T00:00:00+00:00</published><updated>2024-10-04T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers9</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers9/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p> 외과의사 머쓱이는 응급실에 온 환자의 응급도를 기준으로 진료 순서를 정하려고 합니다. 정수 배열 <code class="language-plaintext highlighter-rouge">emergency</code>가 매개변수로 주어질 때 응급도가 높은 순서대로 진료 순서를 정한 배열을 return하도록 solution 함수를 완성해주세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>중복된 원소는 없습니다.</li> <li>1 ≤ <code class="language-plaintext highlighter-rouge">emergency</code>의 길이 ≤ 10</li> <li>1 ≤ <code class="language-plaintext highlighter-rouge">emergency</code>의 원소 ≤ 100<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">bool</span> <span class="nf">compare</span><span class="p">(</span><span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">,</span> <span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">second</span> <span class="o">&gt;</span> <span class="n">b</span><span class="p">.</span><span class="n">second</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">emergency</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">(</span><span class="n">emergency</span><span class="p">.</span><span class="n">size</span><span class="p">());</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">v</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">emergency</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">temp</span><span class="p">;</span>
        <span class="n">temp</span><span class="p">.</span><span class="n">first</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
        <span class="n">temp</span><span class="p">.</span><span class="n">second</span> <span class="o">=</span> <span class="n">emergency</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="n">v</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">temp</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">sort</span><span class="p">(</span><span class="n">v</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">v</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">compare</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">v</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">answer</span><span class="p">[</span><span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">first</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p> <code class="language-plaintext highlighter-rouge">pair</code> 클래스는 <code class="language-plaintext highlighter-rouge">utility</code> 헤더 파일에 존재한다. <code class="language-plaintext highlighter-rouge">vector</code> 헤더에 <code class="language-plaintext highlighter-rouge">utility</code> 헤더 파일이 포함된다.<br/>  <code class="language-plaintext highlighter-rouge">algorithm</code> 헤더 파일에 있는 <code class="language-plaintext highlighter-rouge">sort()</code> 함수를 사용하면, <code class="language-plaintext highlighter-rouge">vector&lt;pair&lt;int, int&gt;&gt;</code>형 변수를 정렬할 수 있다. 물론 비교를 위한 <code class="language-plaintext highlighter-rouge">compare</code> 함수를 정의하여 인자로 넘겨주어야 한다. 이 후 for문으로 정렬된 벡터를 순회하며, 몇 번째 순회인지에 따라 <code class="language-plaintext highlighter-rouge">answer</code> 벡터에 높은 응급도의 인덱스부터 값을 진료 순서로 채워간다.<br/>  다 풀고나니 <code class="language-plaintext highlighter-rouge">map</code> 자료구조로 구현하면, 뭔가 더 아름답게 구현할 수 있지않을까… 싶었다.</p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><category term="2주차"/><summary type="html"><![CDATA[pair 클래스와 sort() 함수로 해결]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘특정 문자 제거하기’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers6/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘특정 문자 제거하기’"/><published>2024-10-03T00:00:00+00:00</published><updated>2024-10-03T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers6</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers6/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p> 문자열 <code class="language-plaintext highlighter-rouge">my_string</code>과 문자 <code class="language-plaintext highlighter-rouge">letter</code>이 매개변수로 주어집니다. <code class="language-plaintext highlighter-rouge">my_string</code>에서 <code class="language-plaintext highlighter-rouge">letter</code>를 제거한 문자열을 return하도록 solution 함수를 완성해주세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>1 ≤ <code class="language-plaintext highlighter-rouge">my_string</code>의 길이 ≤ 100</li> <li><code class="language-plaintext highlighter-rouge">letter</code>은 길이가 1인 영문자입니다.</li> <li><code class="language-plaintext highlighter-rouge">my_string</code>과 <code class="language-plaintext highlighter-rouge">letter</code>은 알파벳 대소문자로 이루어져 있습니다.</li> <li>대문자와 소문자를 구분합니다.<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">my_string</span><span class="p">,</span> <span class="n">string</span> <span class="n">letter</span><span class="p">)</span> <span class="p">{</span>
	<span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="k">auto</span><span class="o">&amp;</span> <span class="n">chr</span> <span class="o">:</span> <span class="n">my_string</span><span class="p">)</span> <span class="c1">// iterator 순회. chr는 char&amp;형이 됨.</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">chr</span> <span class="o">!=</span> <span class="n">letter</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="n">answer</span> <span class="o">+=</span> <span class="n">chr</span><span class="p">;</span> <span class="c1">// letter가 아니면 answer에 추가</span>
	<span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p> <code class="language-plaintext highlighter-rouge">string</code> 변수를 iterator와 for문으로 순회하면, 값의 타입이 <code class="language-plaintext highlighter-rouge">char</code>이다. 허나 매개변수로 <code class="language-plaintext highlighter-rouge">letter</code>를 <code class="language-plaintext highlighter-rouge">string</code>형으로 받기 때문에 비교 연산을 할 수 없다.<br/>  비교 연산을 하기 위해서 <code class="language-plaintext highlighter-rouge">c_str()</code>같은 라이브러리 함수를 사용하기 보다는, letter의 길이가 1이라는 제한 사항을 참고하고, <code class="language-plaintext highlighter-rouge">char&amp;</code>를 반환하는 []오퍼레이터를 사용하여 <code class="language-plaintext highlighter-rouge">letter[0]</code>와 같이 써주면 간단히 해결된다.</p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><category term="2주차"/><summary type="html"><![CDATA[길이가 1인 string형 변수를 char형 변수와 비교하기]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘두 수의 나눗셈’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers1/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘두 수의 나눗셈’"/><published>2024-10-02T00:00:00+00:00</published><updated>2024-10-02T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers1</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers1/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p>정수 num1과 num2가 매개변수로 주어질 때, num1을 num2로 나눈 값에 1,000을 곱한 후 정수 부분을 return 하도록 soltuion 함수를 완성해주세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>0 &lt; num1 ≤ 100</li> <li>0 &lt; num2 ≤ 100<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">num1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">num2</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="n">num1</span> <span class="o">/</span> <span class="n">num2</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p>정수끼리의 나눗셈을 위해 <code class="language-plaintext highlighter-rouge">(double)</code>로 타입캐스팅 후 <code class="language-plaintext highlighter-rouge">/</code>으로 연산한다. 수식 결과값을 return 할 때, <u>**암묵적**</u>으로 <code class="language-plaintext highlighter-rouge">int</code>형으로 타입캐스팅 된다. 이렇게 하면 정수 부분 만 구할 수 있다!</p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><category term="1주차"/><summary type="html"><![CDATA[명시적/묵시적 타입캐스팅을 이용해 풀이]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘숫자 비교하기’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers2/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘숫자 비교하기’"/><published>2024-10-02T00:00:00+00:00</published><updated>2024-10-02T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers2</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers2/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p>정수 num1과 num2가 매개변수로 주어집니다. 두 수가 같으면 1 다르면 -1을 retrun하도록 solution 함수를 완성해주세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>0 ≤ num1 ≤ 10,000</li> <li>0 ≤ num2 ≤ 10,000<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">num1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">num2</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="n">num1</span> <span class="o">==</span> <span class="n">num2</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// 삼항연산자 사용</span>
<span class="p">}</span>
</code></pre></div></div> <h4 id="삼항연산자">삼항연산자</h4> <p>삼항연산자는 <code class="language-plaintext highlighter-rouge">A (조건) B ? C : D;</code>의 형태로 나타내며, 왼쪽 조건 식을 만족하면 C, 만족하지 못하면 D를 반환한다.</p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><category term="1주차"/><summary type="html"><![CDATA[삼항연산자를 이용해 풀이]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘분수의 덧셈’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers3/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘분수의 덧셈’"/><published>2024-10-02T00:00:00+00:00</published><updated>2024-10-02T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers3</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers3/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p>첫 번째 분수의 분자와 분모를 뜻하는 numer1, denom1, 두 번째 분수의 분자와 분모를 뜻하는 numer2, denom2가 매개변수로 주어집니다. 두 분수를 더한 값을 기약 분수로 나타냈을 때 분자와 분모를 순서대로 담은 배열을 return 하도록 solution 함수를 완성해보세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>0 &lt; numer1, denom1, numer2, denom2 &lt; 1,000<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="c1">// 유클리드 호제법</span>
<span class="kt">int</span> <span class="nf">gcd</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">r</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">bigger</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&gt;=</span> <span class="n">b</span> <span class="o">?</span> <span class="n">a</span> <span class="o">:</span> <span class="n">b</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">smaller</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span> <span class="o">?</span> <span class="n">a</span> <span class="o">:</span> <span class="n">b</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">smaller</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">r</span> <span class="o">=</span> <span class="n">bigger</span> <span class="o">%</span> <span class="n">smaller</span><span class="p">;</span>
        <span class="n">bigger</span> <span class="o">=</span> <span class="n">smaller</span><span class="p">;</span>
        <span class="n">smaller</span> <span class="o">=</span> <span class="n">r</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">bigger</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">numer1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">denom1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">numer2</span><span class="p">,</span> <span class="kt">int</span> <span class="n">denom2</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">numer</span> <span class="o">=</span> <span class="n">numer1</span> <span class="o">*</span> <span class="n">denom2</span> <span class="o">+</span> <span class="n">numer2</span> <span class="o">*</span> <span class="n">denom1</span><span class="p">;</span> <span class="c1">// 통분</span>
    <span class="kt">int</span> <span class="n">denom</span> <span class="o">=</span> <span class="n">denom1</span> <span class="o">*</span> <span class="n">denom2</span><span class="p">;</span> <span class="c1">// 통분</span>

    <span class="kt">int</span> <span class="n">gcdV</span> <span class="o">=</span> <span class="n">gcd</span><span class="p">(</span><span class="n">numer</span><span class="p">,</span> <span class="n">denom</span><span class="p">);</span> <span class="c1">// 최대공약수 구하기</span>

    <span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">numer</span> <span class="o">/</span> <span class="n">gcdV</span><span class="p">;</span> <span class="n">answer</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">denom</span> <span class="o">/</span> <span class="n">gcdV</span><span class="p">;</span> <span class="c1">// 최대공약수로 기약분수 만들기</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h4 id="유클리드-호제법">유클리드 호제법</h4> <p>2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a&gt;b), a와 b의 최대공약수는 b와 r의 최대공약수와 같다. 이 성질에 따라, b를 r로 나눈 나머지 r’를 구하고, 다시 r을 r’로 나눈 나머지를 구하는 과정을 반복하여 나머지가 0이 되었을 때 나누는 수가 a와 b의 최대공약수이다.<br/> <a href="https://ko.wikipedia.org/wiki/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C_%ED%98%B8%EC%A0%9C%EB%B2%95">유클리드 호제법 - Wikipedia</a></p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><category term="1주차"/><summary type="html"><![CDATA[유클리드 호제법을 이용해 풀이]]></summary></entry></feed>