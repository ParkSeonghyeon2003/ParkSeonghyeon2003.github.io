<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="kr"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://parkseonghyeon2003.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://parkseonghyeon2003.github.io/" rel="alternate" type="text/html" hreflang="kr"/><updated>2024-10-02T14:00:53+00:00</updated><id>https://parkseonghyeon2003.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">프로그래머스 Lv. 0 ‘두 수의 나눗셈’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers1/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘두 수의 나눗셈’"/><published>2024-10-02T00:00:00+00:00</published><updated>2024-10-02T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers1</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers1/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p>정수 num1과 num2가 매개변수로 주어질 때, num1을 num2로 나눈 값에 1,000을 곱한 후 정수 부분을 return 하도록 soltuion 함수를 완성해주세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>0 &lt; num1 ≤ 100</li> <li>0 &lt; num2 ≤ 100<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">num1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">num2</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="n">num1</span> <span class="o">/</span> <span class="n">num2</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p>정수끼리의 나눗셈을 위해 <code class="language-plaintext highlighter-rouge">(double)</code>로 타입캐스팅 후 <code class="language-plaintext highlighter-rouge">/</code>으로 연산한다. 수식 결과값을 return 할 때, <u>**암묵적**</u>으로 <code class="language-plaintext highlighter-rouge">int</code>형으로 타입캐스팅 된다. 이렇게 하면 정수 부분 만 구할 수 있다!</p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><summary type="html"><![CDATA[명시적/묵시적 타입캐스팅을 이용해 풀이]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘숫자 비교하기’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers2/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘숫자 비교하기’"/><published>2024-10-02T00:00:00+00:00</published><updated>2024-10-02T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers2</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers2/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p>정수 num1과 num2가 매개변수로 주어집니다. 두 수가 같으면 1 다르면 -1을 retrun하도록 solution 함수를 완성해주세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>0 ≤ num1 ≤ 10,000</li> <li>0 ≤ num2 ≤ 10,000<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">num1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">num2</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="n">num1</span> <span class="o">==</span> <span class="n">num2</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// 삼항연산자 사용</span>
<span class="p">}</span>
</code></pre></div></div> <h4 id="삼항연산자">삼항연산자</h4> <p>삼항연산자는 <code class="language-plaintext highlighter-rouge">A (조건) B ? C : D;</code>의 형태로 나타내며, 왼쪽 조건 식을 만족하면 C, 만족하지 못하면 D를 반환한다.</p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><summary type="html"><![CDATA[삼항연산자를 이용해 풀이]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘분수의 덧셈’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers3/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘분수의 덧셈’"/><published>2024-10-02T00:00:00+00:00</published><updated>2024-10-02T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers3</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers3/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p>첫 번째 분수의 분자와 분모를 뜻하는 numer1, denom1, 두 번째 분수의 분자와 분모를 뜻하는 numer2, denom2가 매개변수로 주어집니다. 두 분수를 더한 값을 기약 분수로 나타냈을 때 분자와 분모를 순서대로 담은 배열을 return 하도록 solution 함수를 완성해보세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>0 &lt; numer1, denom1, numer2, denom2 &lt; 1,000<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="c1">// 유클리드 호제법</span>
<span class="kt">int</span> <span class="nf">gcd</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">r</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">bigger</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&gt;=</span> <span class="n">b</span> <span class="o">?</span> <span class="n">a</span> <span class="o">:</span> <span class="n">b</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">smaller</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span> <span class="o">?</span> <span class="n">a</span> <span class="o">:</span> <span class="n">b</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">smaller</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">r</span> <span class="o">=</span> <span class="n">bigger</span> <span class="o">%</span> <span class="n">smaller</span><span class="p">;</span>
        <span class="n">bigger</span> <span class="o">=</span> <span class="n">smaller</span><span class="p">;</span>
        <span class="n">smaller</span> <span class="o">=</span> <span class="n">r</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">bigger</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">numer1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">denom1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">numer2</span><span class="p">,</span> <span class="kt">int</span> <span class="n">denom2</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">numer</span> <span class="o">=</span> <span class="n">numer1</span> <span class="o">*</span> <span class="n">denom2</span> <span class="o">+</span> <span class="n">numer2</span> <span class="o">*</span> <span class="n">denom1</span><span class="p">;</span> <span class="c1">// 통분</span>
    <span class="kt">int</span> <span class="n">denom</span> <span class="o">=</span> <span class="n">denom1</span> <span class="o">*</span> <span class="n">denom2</span><span class="p">;</span> <span class="c1">// 통분</span>

    <span class="kt">int</span> <span class="n">gcdV</span> <span class="o">=</span> <span class="n">gcd</span><span class="p">(</span><span class="n">numer</span><span class="p">,</span> <span class="n">denom</span><span class="p">);</span> <span class="c1">// 최대공약수 구하기</span>

    <span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">numer</span> <span class="o">/</span> <span class="n">gcdV</span><span class="p">;</span> <span class="n">answer</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">denom</span> <span class="o">/</span> <span class="n">gcdV</span><span class="p">;</span> <span class="c1">// 최대공약수로 기약분수 만들기</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h4 id="유클리드-호제법">유클리드 호제법</h4> <p>2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a&gt;b), a와 b의 최대공약수는 b와 r의 최대공약수와 같다. 이 성질에 따라, b를 r로 나눈 나머지 r’를 구하고, 다시 r을 r’로 나눈 나머지를 구하는 과정을 반복하여 나머지가 0이 되었을 때 나누는 수가 a와 b의 최대공약수이다.<br/> <a href="https://ko.wikipedia.org/wiki/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C_%ED%98%B8%EC%A0%9C%EB%B2%95">유클리드 호제법 - Wikipedia</a></p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><summary type="html"><![CDATA[유클리드 호제법을 이용해 풀이]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘최빈값 구하기’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers4/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘최빈값 구하기’"/><published>2024-10-02T00:00:00+00:00</published><updated>2024-10-02T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers4</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers4/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p>최빈값은 주어진 값 중에서 가장 자주 나오는 값을 의미합니다. 정수 배열 array가 매개변수로 주어질 때, 최빈값을 return 하도록 solution 함수를 완성해보세요. 최빈값이 여러 개면 -1을 return 합니다.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>0 &lt; array의 길이 &lt; 100</li> <li>0 ≤ array의 원소 &lt; 1000<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;unordered_map&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">array</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">unordered_map</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">umap</span><span class="p">;</span> <span class="c1">// 해쉬 맵</span>
    <span class="kt">int</span> <span class="n">max</span><span class="p">,</span> <span class="n">maxV</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// 최빈값 pair의 first, second</span>

    <span class="c1">// 빈도 업데이트</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">array</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">umap</span><span class="p">[</span><span class="n">array</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span>

    <span class="c1">// 이터레이터로 순회하며 최빈값 업데이트</span>
    <span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="n">iter</span> <span class="o">:</span> <span class="n">umap</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">iter</span><span class="p">.</span><span class="n">second</span> <span class="o">&gt;</span> <span class="n">maxV</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">maxV</span> <span class="o">=</span> <span class="n">iter</span><span class="p">.</span><span class="n">second</span><span class="p">;</span>
            <span class="n">max</span> <span class="o">=</span> <span class="n">iter</span><span class="p">.</span><span class="n">first</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">iter</span><span class="p">.</span><span class="n">second</span> <span class="o">==</span> <span class="n">maxV</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">max</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">max</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h4 id="unordered_map-해쉬-맵">unordered_map, 해쉬 맵</h4> <p>unordered_map은 key, value 형태로 탐색하는 해쉬 맵 자료구조이다. map은 O(log n)이고, unordered_map은 O(1)이다.<br/> #include<unordered_map>을 선언하고 사용해야 하며, []연산자로 key로 value를 검색 가능하다. key가 유사한 데이터가 많으면 충돌할 가능성이 있어 주의 필요.</unordered_map></p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><summary type="html"><![CDATA[해시 맵, 이터레이터를 이용해 풀이]]></summary></entry><entry><title type="html">프로그래머스 Lv. 0 ‘문자열 뒤집기’</title><link href="https://parkseonghyeon2003.github.io/blog/2024/programmers5/" rel="alternate" type="text/html" title="프로그래머스 Lv. 0 ‘문자열 뒤집기’"/><published>2024-10-02T00:00:00+00:00</published><updated>2024-10-02T00:00:00+00:00</updated><id>https://parkseonghyeon2003.github.io/blog/2024/programmers5</id><content type="html" xml:base="https://parkseonghyeon2003.github.io/blog/2024/programmers5/"><![CDATA[<h2 id="문제-설명">문제 설명</h2> <hr/> <p>문자열 my_string이 매개변수로 주어집니다. my_string을 거꾸로 뒤집은 문자열을 return하도록 solution 함수를 완성해주세요.<br/><br/></p> <h3 id="제한사항">제한사항</h3> <hr/> <ul> <li>1 ≤ my_string의 길이 ≤ 1,000<br/><br/></li> </ul> <h3 id="풀이-코드">풀이 코드</h3> <hr/> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">str</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
	<span class="c1">// iterator를 사용해 역으로 문자열 순회 가능.</span>
	<span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="n">it</span> <span class="o">=</span> <span class="n">str</span><span class="p">.</span><span class="n">rbegin</span><span class="p">();</span> <span class="n">it</span> <span class="o">!=</span> <span class="n">str</span><span class="p">.</span><span class="n">rend</span><span class="p">();</span> <span class="n">it</span><span class="o">++</span><span class="p">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="o">*</span><span class="n">it</span><span class="p">;</span>
	<span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h4 id="rbegin-rend">rbegin(), rend()</h4> <p>reverse_iterator는 역방향 이터레이터로, rbegin(), rend()로 마지막 원소부터 첫 원소까지를 for문을 통해 순회가 가능하다.</p>]]></content><author><name></name></author><category term="프로그래머스"/><category term="C++/Cpp"/><summary type="html"><![CDATA[reverse_iterator로 역순회하기]]></summary></entry></feed>